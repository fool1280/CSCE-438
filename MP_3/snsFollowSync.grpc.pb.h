// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: snsFollowSync.proto
#ifndef GRPC_snsFollowSync_2eproto__INCLUDED
#define GRPC_snsFollowSync_2eproto__INCLUDED

#include "snsFollowSync.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace snsFollowSync {

class SNSFollowSync final {
 public:
  static constexpr char const* service_full_name() {
    return "snsFollowSync.SNSFollowSync";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::snsFollowSync::Reply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> AsyncSyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(AsyncSyncUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> PrepareAsyncSyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(PrepareAsyncSyncUsersRaw(context, request, cq));
    }
    virtual ::grpc::Status SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::snsFollowSync::Reply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> AsyncSyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(AsyncSyncRelationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> PrepareAsyncSyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(PrepareAsyncSyncRelationsRaw(context, request, cq));
    }
    virtual ::grpc::Status SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::snsFollowSync::Reply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> AsyncSyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(AsyncSyncTimelineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>> PrepareAsyncSyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>>(PrepareAsyncSyncTimelineRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* AsyncSyncUsersRaw(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* PrepareAsyncSyncUsersRaw(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* AsyncSyncRelationsRaw(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* PrepareAsyncSyncRelationsRaw(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* AsyncSyncTimelineRaw(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::snsFollowSync::Reply>* PrepareAsyncSyncTimelineRaw(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::snsFollowSync::Reply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> AsyncSyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(AsyncSyncUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> PrepareAsyncSyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(PrepareAsyncSyncUsersRaw(context, request, cq));
    }
    ::grpc::Status SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::snsFollowSync::Reply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> AsyncSyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(AsyncSyncRelationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> PrepareAsyncSyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(PrepareAsyncSyncRelationsRaw(context, request, cq));
    }
    ::grpc::Status SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::snsFollowSync::Reply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> AsyncSyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(AsyncSyncTimelineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>> PrepareAsyncSyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>>(PrepareAsyncSyncTimelineRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) override;
      void SyncUsers(::grpc::ClientContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) override;
      void SyncRelations(::grpc::ClientContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response, std::function<void(::grpc::Status)>) override;
      void SyncTimeline(::grpc::ClientContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* AsyncSyncUsersRaw(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* PrepareAsyncSyncUsersRaw(::grpc::ClientContext* context, const ::snsFollowSync::Users& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* AsyncSyncRelationsRaw(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* PrepareAsyncSyncRelationsRaw(::grpc::ClientContext* context, const ::snsFollowSync::Relation& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* AsyncSyncTimelineRaw(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::snsFollowSync::Reply>* PrepareAsyncSyncTimelineRaw(::grpc::ClientContext* context, const ::snsFollowSync::Post& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SyncUsers_;
    const ::grpc::internal::RpcMethod rpcmethod_SyncRelations_;
    const ::grpc::internal::RpcMethod rpcmethod_SyncTimeline_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SyncUsers(::grpc::ServerContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response);
    virtual ::grpc::Status SyncRelations(::grpc::ServerContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response);
    virtual ::grpc::Status SyncTimeline(::grpc::ServerContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SyncUsers() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncUsers(::grpc::ServerContext* context, ::snsFollowSync::Users* request, ::grpc::ServerAsyncResponseWriter< ::snsFollowSync::Reply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SyncRelations() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncRelations(::grpc::ServerContext* context, ::snsFollowSync::Relation* request, ::grpc::ServerAsyncResponseWriter< ::snsFollowSync::Reply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncTimeline(::grpc::ServerContext* context, ::snsFollowSync::Post* request, ::grpc::ServerAsyncResponseWriter< ::snsFollowSync::Reply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SyncUsers<WithAsyncMethod_SyncRelations<WithAsyncMethod_SyncTimeline<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SyncUsers() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Users, ::snsFollowSync::Reply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::snsFollowSync::Users* request, ::snsFollowSync::Reply* response) { return this->SyncUsers(context, request, response); }));}
    void SetMessageAllocatorFor_SyncUsers(
        ::grpc::MessageAllocator< ::snsFollowSync::Users, ::snsFollowSync::Reply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Users, ::snsFollowSync::Reply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SyncRelations() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Relation, ::snsFollowSync::Reply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::snsFollowSync::Relation* request, ::snsFollowSync::Reply* response) { return this->SyncRelations(context, request, response); }));}
    void SetMessageAllocatorFor_SyncRelations(
        ::grpc::MessageAllocator< ::snsFollowSync::Relation, ::snsFollowSync::Reply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Relation, ::snsFollowSync::Reply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncRelations(
      ::grpc::CallbackServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Post, ::snsFollowSync::Reply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::snsFollowSync::Post* request, ::snsFollowSync::Reply* response) { return this->SyncTimeline(context, request, response); }));}
    void SetMessageAllocatorFor_SyncTimeline(
        ::grpc::MessageAllocator< ::snsFollowSync::Post, ::snsFollowSync::Reply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::snsFollowSync::Post, ::snsFollowSync::Reply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncTimeline(
      ::grpc::CallbackServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SyncUsers<WithCallbackMethod_SyncRelations<WithCallbackMethod_SyncTimeline<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SyncUsers() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SyncRelations() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SyncUsers() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncUsers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SyncRelations() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncRelations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSyncTimeline(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SyncUsers() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SyncUsers(context, request, response); }));
    }
    ~WithRawCallbackMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SyncRelations() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SyncRelations(context, request, response); }));
    }
    ~WithRawCallbackMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncRelations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SyncTimeline(context, request, response); }));
    }
    ~WithRawCallbackMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SyncTimeline(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SyncUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SyncUsers() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::snsFollowSync::Users, ::snsFollowSync::Reply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::snsFollowSync::Users, ::snsFollowSync::Reply>* streamer) {
                       return this->StreamedSyncUsers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SyncUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SyncUsers(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Users* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSyncUsers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::snsFollowSync::Users,::snsFollowSync::Reply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SyncRelations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SyncRelations() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::snsFollowSync::Relation, ::snsFollowSync::Reply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::snsFollowSync::Relation, ::snsFollowSync::Reply>* streamer) {
                       return this->StreamedSyncRelations(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SyncRelations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SyncRelations(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Relation* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSyncRelations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::snsFollowSync::Relation,::snsFollowSync::Reply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SyncTimeline : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SyncTimeline() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::snsFollowSync::Post, ::snsFollowSync::Reply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::snsFollowSync::Post, ::snsFollowSync::Reply>* streamer) {
                       return this->StreamedSyncTimeline(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SyncTimeline() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SyncTimeline(::grpc::ServerContext* /*context*/, const ::snsFollowSync::Post* /*request*/, ::snsFollowSync::Reply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSyncTimeline(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::snsFollowSync::Post,::snsFollowSync::Reply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SyncUsers<WithStreamedUnaryMethod_SyncRelations<WithStreamedUnaryMethod_SyncTimeline<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SyncUsers<WithStreamedUnaryMethod_SyncRelations<WithStreamedUnaryMethod_SyncTimeline<Service > > > StreamedService;
};

}  // namespace snsFollowSync


#endif  // GRPC_snsFollowSync_2eproto__INCLUDED
